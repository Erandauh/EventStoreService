<?xml version="1.0"?>
<!--
<auto-generated>
    This code was generated by a tool.

     Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
</auto-generated>
-->
<xs:schema xmlns:tns="urn:EventStoreService.Configuration" elementFormDefault="qualified" targetNamespace="urn:EventStoreService.Configuration" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="eventStoreService" type="tns:EventStoreService.Configuration.EventStoreServiceConfigurationCT" />
	<xs:complexType name="EventStoreService.Configuration.EventStoreServiceConfigurationCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="1" name="windowsService" type="tns:EventStoreService.Configuration.WindowsServiceElementCT">
				<xs:annotation>
					<xs:documentation>The WindowsService.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="eventStore" type="tns:EventStoreService.Configuration.EventStoreElementCT">
				<xs:annotation>
					<xs:documentation>The EventStore.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.WindowsServiceElementCT">
		<xs:attribute name="serviceName" use="required" type="xs:string">
			<xs:annotation>
				<xs:documentation>The ServiceName.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The Description.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="displayName" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The DisplayName.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.EventStoreElementCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="1" name="database" type="tns:EventStoreService.Configuration.DatabaseElementCT">
				<xs:annotation>
					<xs:documentation>The Database.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="projections" type="tns:EventStoreService.Configuration.ProjectionsElementCT">
				<xs:annotation>
					<xs:documentation>The Projections.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="singleNode" type="tns:EventStoreService.Configuration.SingleNodeElementCT">
				<xs:annotation>
					<xs:documentation>Configuration for single node run mode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="cluster" type="tns:EventStoreService.Configuration.ClusterElementCT">
				<xs:annotation>
					<xs:documentation>Configuration for cluster run mode.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="runMode" use="optional" type="tns:RunMode">
			<xs:annotation>
				<xs:documentation>The type of node to start.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="binaryPath" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The path to the EventStore binaries.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.DatabaseElementCT">
		<xs:attribute name="inMemory" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Keep everything in memory, no directories or files are created.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="path" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The path the db should be loaded/saved to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="logs" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The Logs.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="skipDbVerify" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Bypasses the checking of file hashes of database during startup (allows for faster startup).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cachedChunks" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of chunks to cache in unmanaged memory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="chunksCacheSize" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The amount of unmanaged memory to use for caching chunks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minFlushDelay" use="optional" type="xs:double">
			<xs:annotation>
				<xs:documentation>The minimum flush delay in milliseconds.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="statsPeriod" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of seconds between statistics gathers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="nodePriority" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The node priority used during master election</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="disableScavengeMerge" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Disables the merging of chunks when scavenge is running</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ProjectionsElementCT">
		<xs:attribute name="run" use="optional" type="tns:RunProjections">
			<xs:annotation>
				<xs:documentation>Enables the running of JavaScript projections.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="threads" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of threads to use for projections.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.SingleNodeElementCT">
		<xs:attribute name="ip" use="optional">
			<xs:annotation>
				<xs:documentation>The IP address to bind to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="tcpPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The port to run the TCP server on.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="secureTcpPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The SecureTcpPort.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="httpPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The port to run the HTTP server on.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterElementCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="0" name="ip" type="tns:EventStoreService.Configuration.ClusterIpElementCT">
				<xs:annotation>
					<xs:documentation>The Ip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="http" type="tns:EventStoreService.Configuration.ClusterHttpElementCT">
				<xs:annotation>
					<xs:documentation>The Http.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="tcp" type="tns:EventStoreService.Configuration.ClusterTcpElementCT">
				<xs:annotation>
					<xs:documentation>The Tcp.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="manager" type="tns:EventStoreService.Configuration.ClusterManagerElementCT">
				<xs:annotation>
					<xs:documentation>The Manager.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="ssl" type="tns:EventStoreService.Configuration.ClusterSslElementCT">
				<xs:annotation>
					<xs:documentation>The Ssl.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="dns" type="tns:EventStoreService.Configuration.ClusterDnsElementCT">
				<xs:annotation>
					<xs:documentation>The Dns.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="gossip" type="tns:EventStoreService.Configuration.ClusterGossipElementCT">
				<xs:annotation>
					<xs:documentation>The Gossip.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="clusterSize" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of nodes in the cluster.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="commitCount" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of nodes which must acknowledge commits before acknowledging to a client.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="prepareCount" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The number of nodes which must acknowledge prepares.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterIpElementCT">
		<xs:attribute name="internal" use="optional">
			<xs:annotation>
				<xs:documentation>Internal IP Address.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="external" use="optional">
			<xs:annotation>
				<xs:documentation>External IP Address.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterHttpElementCT">
		<xs:attribute name="internalPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>Internal HTTP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="externalPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>External HTTP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterTcpElementCT">
		<xs:attribute name="internalPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>Internal TCP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="internalSecurePort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>Internal Secure TCP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="externalPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>External TCP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="externalSecurePort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>External Secure TCP Port.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterManagerElementCT">
		<xs:attribute name="internalIp" use="optional">
			<xs:annotation>
				<xs:documentation>The InternalIp.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="externalIp" use="optional">
			<xs:annotation>
				<xs:documentation>The ExternalIp.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="internalHttpPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The InternalHttpPort.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="externalHttpPort" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The ExternalHttpPort.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterSslElementCT">
		<xs:attribute name="useInternalSsl" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Whether to use secure internal communication.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sslTargetHost" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Target host of server's SSL certificate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sslValidateServer" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>The SslValidateServer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterDnsElementCT">
		<xs:attribute name="discoverViaDns" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Whether to use DNS lookup to discover other cluster nodes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="clusterDns" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>DNS name from which other nodes can be discovered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.ClusterGossipElementCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="1" name="seeds" type="tns:EventStoreService.Configuration.IPEndpointElementCollectionCT">
				<xs:annotation>
					<xs:documentation>Endpoints for other cluster nodes from which to seed gossip</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="port" use="optional" type="xs:int">
			<xs:annotation>
				<xs:documentation>The port on which cluster nodes' managers are running.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.IPEndpointElementCT">
		<xs:attribute name="address" use="required">
			<xs:annotation>
				<xs:documentation>The Address.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="EventStoreService.Configuration.IPEndpointElementCollectionCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="0" maxOccurs="unbounded" name="endpoint" type="tns:EventStoreService.Configuration.IPEndpointElementCT">
				<xs:annotation>
					<xs:documentation>The IPEndpointElement Configuration Element.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="RunMode">
		<xs:annotation>
			<xs:documentation>RunMode.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="SingleNode">
				<xs:annotation>
					<xs:documentation>SingleNode.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Cluster">
				<xs:annotation>
					<xs:documentation>Cluster.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RunProjections">
		<xs:annotation>
			<xs:documentation>RunProjections.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>None.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="System">
				<xs:annotation>
					<xs:documentation>System.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>All.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
